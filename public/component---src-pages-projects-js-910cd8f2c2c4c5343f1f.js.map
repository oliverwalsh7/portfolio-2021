{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js"],"names":["query","ProjectsPage","projects","data","allStrapiProjects","nodes","className","title","Project","description","stack","github","url","image","index","console","log","fluid","childImageSharp","map","item","key","id","href","Projects","showLink","Title","project","to"],"mappings":"6FAAA,8FAkBaA,EAAK,aAyBHC,UArCM,SAAC,GAEf,IAD0BC,EAC3B,EADJC,KAAMC,kBAAmBC,MAEzB,OACA,kBAAC,IAAD,KACI,6BAASC,UAAU,iBACjB,kBAAC,IAAD,CAAUJ,SAAUA,EAAUK,MAAM,qB,kHC4B7BC,EApCC,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,YAAaF,EAA6C,EAA7CA,MAAOG,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAE/D,OADAC,QAAQC,IAAIN,GAEV,6BAASJ,UAAU,WACjB,kBAAC,IAAD,CAAOW,MAAOJ,EAAMK,gBAAgBD,MAAOX,UAAU,gBACnD,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,kBAAkBQ,EAAM,GACxC,4BAAKP,GACL,uBAAGD,UAAU,gBAAgBG,GAC7B,yBAAKH,UAAU,iBACZI,EAAMS,KAAI,SAACC,GACV,OAAO,0BAAMC,IAAKD,EAAKE,IAAKF,EAAKb,WAGvC,yBAAKD,UAAU,iBACb,uBAAGiB,KAAMZ,GACM,OAAVA,EAAkB,8BAAS,kBAAC,IAAD,CAAgBL,UAAU,kBAE1D,uBAAGiB,KAAMX,GACP,kBAAC,IAAD,CAAeN,UAAU,sB,YCCtBkB,IAnBE,SAAC,GAAiC,IAAhCtB,EAA+B,EAA/BA,SAAUK,EAAqB,EAArBA,MAAOkB,EAAc,EAAdA,SAClC,OACE,6BAASnB,UAAU,oBACjB,kBAACoB,EAAA,EAAD,CAAOnB,MAAOA,IACd,yBAAKD,UAAU,kCACZJ,EAASiB,KAAI,SAACQ,EAASb,GACtB,OAAO,kBAAC,EAAD,eAASO,IAAKM,EAAQL,GAAIR,MAAOA,GAAWa,EAA5C,CAAqDjB,MAAOiB,EAAQjB,aAG7Ee,GACE,kBAAC,IAAD,CAAMG,GAAG,YAAYtB,UAAU,kBAA/B","file":"component---src-pages-projects-js-910cd8f2c2c4c5343f1f.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport Projects from \"../components/Projects\"\n// ...GatsbyImageSharpFluid\n\nconst ProjectsPage = ({\n  data:{allStrapiProjects:{nodes:projects}}\n}) => {\n  return( \n  <Layout>\n      <section className=\"projects-page\">\n        <Projects projects={projects} title=\"all projects\" />\n      </section>\n  </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allStrapiProjects {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n  }\n`\n\nexport default ProjectsPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nconst Project = ({description, title, stack, github, url, image, index}) => {\n  console.log(stack)\n  return (\n    <article className=\"project\">\n      <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n        <div className=\"project-info\">\n          <span className=\"project-number\">{index+1}</span>\n          <h3>{title}</h3>\n          <p className=\"project-desc\">{description}</p>\n          <div className=\"project-stack\">\n            {stack.map((item) => {\n              return <span key={item.id}>{item.title}</span>\n            })}\n          </div>\n        <div className=\"project-links\">\n          <a href={github}>\n              {github == 'n/a' ? <div/> : <FaGithubSquare className=\"project-icon\" />}\n          </a>\n          <a href={url}>\n            <FaShareSquare className=\"project-icon\" />\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired, \n  github:PropTypes.string.isRequired, \n  url: PropTypes.string.isRequired, \n  image: PropTypes.object.isRequired\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\n\nconst Projects = ({projects, title, showLink}) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title}/>\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} stack={project.stack}/>\n        })}\n      </div>\n      { showLink && (\n          <Link to='/projects' className=\"btn center-btn\">\n            projects\n          </Link>\n        )\n      }\n    </section>\n  )\n}\n\nexport default Projects\n"],"sourceRoot":""}